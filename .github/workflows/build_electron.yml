name: Build electron

on:
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    container: debian:oldstable

    steps:
      - uses: actions/checkout@v4

      - name: Install build tools
        run: apt-get update && apt-get install -y build-essential cmake zip python3 git git-lfs

      - name: Install Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Download onnx
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: csukuangfj/onnxruntime-libs
          version: 'tags/v1.20.1'
          file: onnxruntime-linux-x64-static_lib-1.20.1-glibc2_17.zip

      - name: Unzip
        run: |
          unzip onnxruntime*.zip
          rm onnxruntime*zip
          mv onnxruntime* onnxlibs

      - name: Download ffmpeg-libs
        uses: dawidd6/action-download-artifact@v7
        with:
          repo: elya5/ffmpeg-build
          github_token: ${{ secrets.ACCESS_TOKEN_GITHUB }}
          name: ffmpeg-libs-linux
          path: ffmpeglibs
          workflow: blank.yml
          check_artifacts: true
          search_artifacts: true

      - name: Fetch transnetv2
        run: |
          git lfs install
          git clone https://huggingface.co/elya5/transnetv2

      - name: Move model
        run: mv transnetv2/transnetv2.onnx resources/

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build:linux

      - uses: actions/upload-artifact@v4
        with:
          name: vian-light-linux
          path: ${{ github.workspace }}/dist/*AppImage
          retention-days: 90
          overwrite: true

  build-mac:
    runs-on: macos-13
    env:
      APPLE_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
      APPLE_API_KEY: AuthKey.p8
      APPLE_API_KEY_ISSUER: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
      API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
    steps:
      - uses: actions/checkout@v4

      - name: Write AuthKey.p8
        run: echo "${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}" > AuthKey.p8

      - name: Test notarytool directly
        run: xcrun notarytool --version

      - name: Install Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Download onnx
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: csukuangfj/onnxruntime-libs
          version: 'tags/v1.20.1'
          file:  onnxruntime-osx-universal2-static_lib-1.20.1.zip

      - name: Unzip
        run: |
          unzip onnxruntime*.zip
          rm onnxruntime*zip
          mv onnxruntime* onnxlibs

      - name: Download ffmpeg-libs
        uses: dawidd6/action-download-artifact@v7
        with:
          repo: elya5/ffmpeg-build
          github_token: ${{ secrets.ACCESS_TOKEN_GITHUB }}
          name: ffmpeg-libs-macos
          path: ffmpeglibs
          workflow: blank.yml
          check_artifacts: true
          search_artifacts: true

      - name: Fetch transnetv2
        run: |
          git lfs install
          git clone https://huggingface.co/elya5/transnetv2

      - name: Move model
        run: mv transnetv2/transnetv2.onnx resources/

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build:mac

      - uses: actions/upload-artifact@v4
        with:
          name: vian-light-macos
          path: ${{ github.workspace }}/dist/*.dmg
          retention-days: 90
          overwrite: true

      - name: Debug print notarization log
        if: always()
        run: cat notarization-error.log

      - name: Clean up keychain and API key
        if: always()
        run: rm AuthKey.p8

  build-windows:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v4

      - name: Install Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Download onnx
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: csukuangfj/onnxruntime-libs
          version: 'tags/v1.20.1'
          file:  onnxruntime-win-x64-static_lib-1.20.1.tar.bz2

      - name: Install 7-Zip
        shell: powershell
        run: |
          Invoke-WebRequest -Uri "https://7-zip.org/a/7z2301-x64.exe" -OutFile "7z-installer.exe"
          Start-Process -FilePath "7z-installer.exe" -Args "/S" -Wait
          echo "C:\Program Files\7-Zip" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Extract onnx
        run: |
          7z x onnxruntime*.tar.bz2
          Remove-Item onnxruntime*.tar.bz2
          7z x onnxruntime*.tar
          Remove-Item onnxruntime*.tar
          Rename-Item -Path onnxruntime* -NewName onnxlibs
        shell: pwsh

      - name: Download ffmpeg-libs
        uses: dawidd6/action-download-artifact@v7
        with:
          repo: elya5/ffmpeg-build
          github_token: ${{ secrets.ACCESS_TOKEN_GITHUB }}
          name: ffmpeg-libs-win
          path: ffmpeglibs
          workflow: blank.yml
          check_artifacts: true
          search_artifacts: true

      - name: Fetch transnetv2
        run: |
          git lfs install
          git clone https://huggingface.co/elya5/transnetv2

      - name: Move model
        run: move transnetv2\transnetv2.onnx resources\

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build:win

      - uses: actions/upload-artifact@v4
        with:
          name: vian-light-win
          path: ${{ github.workspace }}/dist/*.exe
          retention-days: 90
          overwrite: true
